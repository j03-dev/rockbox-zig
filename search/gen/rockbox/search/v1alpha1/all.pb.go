// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: rockbox/search/v1alpha1/all.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type All struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Albums      []*Album      `protobuf:"bytes,1,rep,name=albums,proto3" json:"albums,omitempty"`
	Artists     []*Artist     `protobuf:"bytes,2,rep,name=artists,proto3" json:"artists,omitempty"`
	Files       []*File       `protobuf:"bytes,3,rep,name=files,proto3" json:"files,omitempty"`
	LikedAlbums []*LikedAlbum `protobuf:"bytes,4,rep,name=liked_albums,json=likedAlbums,proto3" json:"liked_albums,omitempty"`
	LikedTrack  []*LikedTrack `protobuf:"bytes,5,rep,name=liked_track,json=likedTrack,proto3" json:"liked_track,omitempty"`
	Tracks      []*Track      `protobuf:"bytes,6,rep,name=tracks,proto3" json:"tracks,omitempty"`
}

func (x *All) Reset() {
	*x = All{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rockbox_search_v1alpha1_all_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *All) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*All) ProtoMessage() {}

func (x *All) ProtoReflect() protoreflect.Message {
	mi := &file_rockbox_search_v1alpha1_all_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use All.ProtoReflect.Descriptor instead.
func (*All) Descriptor() ([]byte, []int) {
	return file_rockbox_search_v1alpha1_all_proto_rawDescGZIP(), []int{0}
}

func (x *All) GetAlbums() []*Album {
	if x != nil {
		return x.Albums
	}
	return nil
}

func (x *All) GetArtists() []*Artist {
	if x != nil {
		return x.Artists
	}
	return nil
}

func (x *All) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *All) GetLikedAlbums() []*LikedAlbum {
	if x != nil {
		return x.LikedAlbums
	}
	return nil
}

func (x *All) GetLikedTrack() []*LikedTrack {
	if x != nil {
		return x.LikedTrack
	}
	return nil
}

func (x *All) GetTracks() []*Track {
	if x != nil {
		return x.Tracks
	}
	return nil
}

var File_rockbox_search_v1alpha1_all_proto protoreflect.FileDescriptor

var file_rockbox_search_v1alpha1_all_proto_rawDesc = []byte{
	0x0a, 0x21, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x17, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x23, 0x72, 0x6f,
	0x63, 0x6b, 0x62, 0x6f, 0x78, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x24, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x6f, 0x78,
	0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x72, 0x6f, 0x63,
	0x6b, 0x62, 0x6f, 0x78, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2f, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x23, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf3, 0x02, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x12, 0x36, 0x0a, 0x06,
	0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72,
	0x6f, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x06, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x73, 0x12, 0x39, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x12,
	0x33, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0c, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x5f, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x6f, 0x63,
	0x6b, 0x62, 0x6f, 0x78, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52,
	0x0b, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x44, 0x0a, 0x0b,
	0x6c, 0x69, 0x6b, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65,
	0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x12, 0x36, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x52, 0x06, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x73, 0x69, 0x72, 0x79, 0x73, 0x6e,
	0x64, 0x72, 0x2f, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x2d, 0x7a, 0x69, 0x67, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_rockbox_search_v1alpha1_all_proto_rawDescOnce sync.Once
	file_rockbox_search_v1alpha1_all_proto_rawDescData = file_rockbox_search_v1alpha1_all_proto_rawDesc
)

func file_rockbox_search_v1alpha1_all_proto_rawDescGZIP() []byte {
	file_rockbox_search_v1alpha1_all_proto_rawDescOnce.Do(func() {
		file_rockbox_search_v1alpha1_all_proto_rawDescData = protoimpl.X.CompressGZIP(file_rockbox_search_v1alpha1_all_proto_rawDescData)
	})
	return file_rockbox_search_v1alpha1_all_proto_rawDescData
}

var file_rockbox_search_v1alpha1_all_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_rockbox_search_v1alpha1_all_proto_goTypes = []interface{}{
	(*All)(nil),        // 0: rockbox.search.v1alpha1.All
	(*Album)(nil),      // 1: rockbox.search.v1alpha1.Album
	(*Artist)(nil),     // 2: rockbox.search.v1alpha1.Artist
	(*File)(nil),       // 3: rockbox.search.v1alpha1.File
	(*LikedAlbum)(nil), // 4: rockbox.search.v1alpha1.LikedAlbum
	(*LikedTrack)(nil), // 5: rockbox.search.v1alpha1.LikedTrack
	(*Track)(nil),      // 6: rockbox.search.v1alpha1.Track
}
var file_rockbox_search_v1alpha1_all_proto_depIdxs = []int32{
	1, // 0: rockbox.search.v1alpha1.All.albums:type_name -> rockbox.search.v1alpha1.Album
	2, // 1: rockbox.search.v1alpha1.All.artists:type_name -> rockbox.search.v1alpha1.Artist
	3, // 2: rockbox.search.v1alpha1.All.files:type_name -> rockbox.search.v1alpha1.File
	4, // 3: rockbox.search.v1alpha1.All.liked_albums:type_name -> rockbox.search.v1alpha1.LikedAlbum
	5, // 4: rockbox.search.v1alpha1.All.liked_track:type_name -> rockbox.search.v1alpha1.LikedTrack
	6, // 5: rockbox.search.v1alpha1.All.tracks:type_name -> rockbox.search.v1alpha1.Track
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_rockbox_search_v1alpha1_all_proto_init() }
func file_rockbox_search_v1alpha1_all_proto_init() {
	if File_rockbox_search_v1alpha1_all_proto != nil {
		return
	}
	file_rockbox_search_v1alpha1_album_proto_init()
	file_rockbox_search_v1alpha1_artist_proto_init()
	file_rockbox_search_v1alpha1_file_proto_init()
	file_rockbox_search_v1alpha1_like_proto_init()
	file_rockbox_search_v1alpha1_track_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_rockbox_search_v1alpha1_all_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*All); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rockbox_search_v1alpha1_all_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rockbox_search_v1alpha1_all_proto_goTypes,
		DependencyIndexes: file_rockbox_search_v1alpha1_all_proto_depIdxs,
		MessageInfos:      file_rockbox_search_v1alpha1_all_proto_msgTypes,
	}.Build()
	File_rockbox_search_v1alpha1_all_proto = out.File
	file_rockbox_search_v1alpha1_all_proto_rawDesc = nil
	file_rockbox_search_v1alpha1_all_proto_goTypes = nil
	file_rockbox_search_v1alpha1_all_proto_depIdxs = nil
}
